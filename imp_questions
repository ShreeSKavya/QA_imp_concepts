.bashrc :- .bashrc is a scripted file that executes when user logs in.
Know_host_file :-It is a file that contains public keys of the host accesed by the user.
shared library :- It is a collection of groovy scripts that shared between different jenkins jobs.
Number of executors in jenkins :- Number of concurrent jobs that can run.If we want to run multiple jobs simultaneously at a time then we need more  number of executors.
what is label :- when we creating new slave node,jenkins allows us to tag a slave node with label.Label is the way of naming one or more slaves.
what is x-args :- X-args is a unix command used to build and executes commands from standard inputs.When we need to take output from one command and used it as arguement to another command ,
                   then we use x-args

Git:
what is git revert :- It is the command that create new commits that undoes the changes from previous commit.
                      git revert <commit_id>
what is git reset :- It is the command use to  vanish a commit completely from local repo and remote repo. git reset --hard <commit_id>
what is git :- Git is source code management tool or version control tool that is used to track the changes,maintainance and control the changes from source code.
Difference between git and github :- While Git is a tool that's used to manage multiple versions of source code edits that are then transferred to files in a Git repository, 
                                      GitHub serves as a location for uploading copies of a Git repository. 

what is git branch and its uses : Branching means diverging from the mainline and continue to work separately without messing with the mainline.

jenkins:
what is jenkins :- It is open source automation server,hat is used to automate all sorts of tasks related to build,testing and deploying softwares.
what is jenkins file :- It is a file that contains all job configurations in groovy.
Groovy means It is the java based scripting language used by jenkins pipeline.
How do you define environment variables in jenkins pipeline : Environment directives specifies sequence of key-value pair which will be defined as 
                  environment variables for all the steps or stage-specific-steps depending on where environment directive is located within pipeline.
                we use 
                  environment {
                     variable_name=value
                }
                The value of these user-defined environments are made available to pipeline steps by using env object.
How do you define parameters in jenkins pipeline : The parameters directives gives list of parameters that the user should provided when triggering the pipeline.
                  The values for these user-specified parameters are made available to Pipeline steps via the params object
                  pipeline {
                      agent any 
                      parameters {
                                string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                            
                                text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
                            
                                booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
                            
                                choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
                            
                                password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
                           }
                       stages {
                            stage('Example') {
                                steps {
                                    echo "Hello ${params.PERSON}"
                    
                                    echo "Biography: ${params.BIOGRAPHY}"
                    
                                    echo "Toggle: ${params.TOGGLE}"
                    
                                    echo "Choice: ${params.CHOICE}"
                    
                                    echo "Password: ${params.PASSWORD}"
                                }
                            }
                        }
                      
                  }

How do you define triggers in jenkins pipeline : The triggers directive defines the automated ways in which the Pipeline should be re-triggered.

    cron
        Accepts a cron-style string to define a regular interval at which the Pipeline should be re-triggered, 
        for example: triggers { cron('H */4 * * 1-5') }
        pipeline {
                  agent any
                  triggers {
                      cron('H */4 * * 1-5')
                  }
                  stages {
                      stage('Example') {
                          steps {
                              echo 'Hello World'
                          }
                      }
                  }
              }

pollSCM
        Accepts a cron-style string to define a regular interval at which Jenkins should check for new source changes. 
        If new changes exist, the Pipeline will be re-triggered. 
        For example: triggers { 
			pollSCM('H */4 * * 1-5') 
			}

How do you define tools in jenkins pipeline : A section defining tools to auto-install and put on the PATH. This is ignored if agent none is specified.
                pipeline {
                    agent any
                    tools {
                        maven 'apache-maven-3.0.1' 
                    }
                    stages {
                        stage('Example') {
                            steps {
                                sh 'mvn --version'
                            }
                        }
                    }
                }
Agent
	- An agent is a declarative used to define the execution method for pipeline stages.
	- agent is the one which tell stages to execute on which node and its executor.
	- Agent can be specified at two levels 
				a. pipeline level 
				b. Stage level
			
	Types of agent 
		any 
			- This is the default agent, If I wont specify any agent this will be considered.
			- Execute the Pipeline, or stage, on any available agent. For example: agent any
			
		none 
			-  When applied at the top-level of the pipeline block,there is no global agent will be allocated for the entire Pipeline run and 
            			each stage section will need to contain its own agent section. 
        			For example: agent none
				
		label 
			- we can define agent as label at pipeline to run all the stages of pipeline
			  on a perticular node with label.	

Maven:
what is maven :-Maven is open source build tool developed to build ,publish and deploy several projects at once for better project management.
what is pom.xml :- POM means Project Object Model.
                    It is a file that contains information about the project and configuration details for maven to build the project.

Tomcat:
What is tomcat : It is an open-source Java servlet container that implements many Java Enterprise Specs such as the Websites API, Java-Server Pages and last but not least, the Java Servlet.

AWS:
Explain Amazon EBS and its types :
	Amazon Elastic Block Store (Amazon EBS) provides block level storage volumes for use with EC2 instances. 
		EBS volumes behave like raw, unformatted block devices.
		EBS volumes are persistent. They can live beyond the life of the ec2 instance that they are attached to. They can be attached/detached to and from different ec2 instances.
		An EBS volume can only be attached to 1 ec2 instance at a time (Multi Attach EBS Volume can be attached to multiple instances). They are mounted to the file system.
		You can backup the EBS volume into a snapshot, which can later be used/restored into a new EBS volume.

***************************************************************************************************************************************************************************************************************

***************************************************************************************************************************************************************************************************************
LINUX:

1.Why we use 
  - ping : To check the connection b/w 2 networks

  - telnet : It is used for authentication and authorization purpose.
	     It is used to create the remote connection with the system over a TCP/IP network.
	     To connect to the remote machine from the local machine, we should run telnet in the following pattern:

			$ telnet -l [username] [remote machine IP] [port (optional)]

  
  - To list all the open files : $ lsof
  
  - To check the port open or not 
      List all busy ports in linux
       1. sudo lsof -i -P -n | grep LISTEN
       2. sudo netstat -tulpn | grep LISTEN
            - To list all the listening ports : $ netstat -l (-l refers to listening)
	 
              The options used in this command have the following meaning:

		-t - Show TCP ports.
		-u - Show UDP ports.
		-n - Show numerical addresses instead of resolving hosts.
		-l - Show only listening ports.
		-p - Show the PID and name of the listenerâ€™s process. This information is shown only if you run the command as root or sudo user.
       
   - To check a specific port open or not  
   	sudo lsof -i:<port_number>
	example: sudo lsof -i:8080

  - To display the system performance information : $ Top

  - nslookup : The nslookup command is a tool used to query Domain Name System (DNS) servers and retrieve information about a specific domain or IP address. 
                                 (or)
                It is used to resolve a domain name.
   - tree command => It Displays directory paths and (optionally) files in each subdirectory. 

* How to create new user to the remote machine?
   	$ sudo useradd <user_name>

* How to set new password to the new user?
   	$ sudo passwd <user_name>

* How to change the Owner of the file?
	$ sudo chown <owner_name> <file_name>

* To list all the namespace => $ lsns

* To check the system is active or not => uptime command is used
	Uptime is defined as a command that returns how long a system has been running and statistics like current time, the number of active sessions of users, and load averages of the system

* what is swap memory?
	It is a part of actual memory , where data stored in ram can be temporarily moved when there is demand for more memory than your computer has available.

*what is inode(index node) ?

* what is the default permission for the file in linux?
	rw-rw-r(664)

* what is the maximum permission for the file in linux?
	rwx-rwx-rwx(777)

* How to check current runing process in linux?
	ps

* How to check all the process which are running in backgroun?
	ps -ef

* How to stop the process gracefully?
	By using systemctl stop <name_of_the_service>

* How to check the size of the file which is more than 1 MB?
	find . -size +1

* How to check the size of the file which is less than 1 MB?
	find . -size -1

* Difference between .bashrc and .profile & .bash_profile 
	.bashrc => The .bashrc file is a configuration file that is used to set up and customize the Bash shell, which is the default shell on most Linux and Unix-based operating systems. 
                   This file is typically located in the user's home directory and is executed every time a new terminal window is opened or a new Bash shell is started.

	.profile => The .profile file is a configuration file that is used to set up and customize the shell environment when a user logs in to the system. 
		    This file is typically located in the user's home directory and is executed only once when the user logs in to the system.

	.bash_profile => The .bash_profile file is a configuration file that is used to set up and customize the Bash shell when a user logs in to the system. 
			This file is typically located in the user's home directory and is executed only once when the user logs in to the system.
 *****************************************************************************************************************
 GIT:

 * git --squash : to combine multiple commits into one.

 * How to change the commit message? or How do I change the commit message after push?
	git commit --amend -m "New message"
	git push --force <repository-name> <branch-name>

 * How to check the difference between 2 commit IDs?
	git diff <commit_ID_1> <commit_ID_2>

 * Why we use .gitignore file?
 	.gitignore is used to ignore some files or directories which you don't want to be tracked.(Git operations are not applied to that files or directories
    which are added to .gitignore

* What is branching stratergy?
	 Branching means diverging from the mainline and continue to work separately without messing with the mainline.
   It is used for parallel development of the project

* How to initiate git repo?
	git --init
*******************************************************************************************************************
JENKINS:

1.After build where to store our jenkins job ?
	we store it in Artifactories like Jfrog

2.How to secure jenkins job?
	Step 1 âˆ’ Click on Manage Jenkins and choose the 'Configure Global Security' option.
	Step 2 âˆ’ Click on Enable Security option. As an example, let's assume that we want Jenkins to maintain it's own database of users, so in the Security Realm, choose the option of 'Jenkins' own user database'.

3.Process of jenkins => Jenkins
   - process of Tomcat => Catelina
   - process of Docker => Docker daemon

4.What are the parameterized plugins?

5.why we use maven in jenkins?

6.How do you automate CI/CD?

7.What is quality profile?

8.Why we use quality gateway in jenkins?

9.what is gearman plugin in jenkins?
	The gearman plugin was designed to support extra slaves, allow load balancing of build jobs, and provide redundancy.
    Jenkins core does not support multiple masters
*********************************************************************************************************************

AWS:

1.what is s3 replication?
	It is used to copy the obejects between the buckets.

2.What is edge location?
	Edge Location is the Data Center used to deliver content fast to your users. It is the site that is nearest your users.

3.What is package manager?
	It is a set of tools used to automate installing, upgrading, congigure the software
	apt => ubuntu
	yum => Red hat
	apk => alpine

4.What is A-name records,C-name records,Alias?
	A-name records => These are the standard DNS records.The A record maps a domain name to one or more IP addresses when the IP are known and stable.

	C-name records => These are the custom DNS records.The C-NAME record maps a domain name to another domain name. It should only be used when there are no other records on that name.

5.Difference between NACL and Security group?

6.What is the least previlage permission in aws?

7.what are the examples for RDS ?
	Amazon Aurora.
	PostgreSQL.
	MySQL.
	MariaDB.
	Oracle Database.
	Microsoft SQL Server

8.How to secure EC2 instance ?
	By using security groups 

9.How to access private subnets?
	By providing Nat gateway

10.Which protocol is used in Application Load Balancer ?
	HTTP/HTTPS protocol

10.Which protocol is used in Network Load Balancer ?
	TCP/SSL protocol

10.Which protocol is used in Classic Load Balancer ?
	HTTP/HTTPS and TCP/SSL protocol
********************************************************************************************************************************
DOCKER:

1.How to list all the process inside the container?
	docker top <Container_ID>

2.Why we use docker compose?
	Docker Compose is a tool that helps you define and share multi-container applications.

3.what is system prune?
	It is used to remove all unused objects like container,network,volume

4.what is container prune?
	It is used to remove all the stopped container

5.what is image prune?
	It is used to remove all unused images or dangling images

6.what is dangling images?
	It is untagged image which is not used by container

7.How to list all the dangling images?
	docker images -f dangling=True

7.What is zombie process?
	It is the process which completes its excecution,but still has entry in its process table.paraent process still wait for its child process.	

8.How to connect 2 networks which are present in different bridges?
	docker network connect <custom_bridge_name><container_name>
 	where <container_name> is the name of the container which is present in default network.

9.why we use docker commit?
	If I want to create new image from the existing container.Then docker commit is used.
	docker commit <existing_container_name> <new_image_name>:<Tag>

10.What is docker hub?
	Docker Hub is a collaboration tool and a marketplace for community developers, open source contributors, and independent software vendors (ISVs) to distribute their code publicly. 

11.What is docker registry?
	A Docker registry is a storage and distribution system for named Docker images.

12.Why we scanning the images in docker?
	Container image security scanning is important because it is the primary way to find and fix vulnerabilities in container images before pushing the image to Docker Hub, ECR, GCR, Harbor or any other registries you may use.
 For secure development we use scanning.

13.Benefits of Docker?

14.How to maintain microservices ?
	By using Docker,we can maintain microservices.

15.Difference between Running and Failed Container?
	

16.What is rolling out and rolling back ?
	Upgrade: The ability to deploy latest major version and shut older version(s).

	Rollout: The ability to deploy lates minor version (bugfix, hotfix, minor feature, enhancement) without downtime.

	Rollback: The ability to restore back the older working version in case something goes wrong.

17.Why we use rolling update?
	

18.Difference b/w rolling update and recreate ?
	Rolling update:
		*In this strategy, we do not drop all the already running instances.
		*We drop instances by a certain percentage at a time and simultaneously spawn equal percentage of newer version pods.
		*This upgrade is the default strategy in K8s.
		*This has no downtime.

	Recreate :
		*Suppose there are 5 instances of your app running
		*When deploying a new version, we can destroy the 5 instances of older version and then deploy 5 instances of newer version.
		*The issue is there will be a downtime.
		*This is majorly done during major changes, breaking changes or when backward compatibility is not possible.
		*This is not the default strategy in K8s.
*****************************************************************************************************************************************************************
Kubernetes:
1.Difference between kubelet and kubectl?
	
2.How to autoscale the pods using k8s cli?
	kubectl autoscale deployment.v1.apps/nginx-deployment --min=5 --max=10 --cpu-percent=80

3.How to scale the pods using k8s cli?
	kubectl scale deployment.v1.apps/nginx-deployment --replicas=10

4.Port range for services => 30000 - 50000
  Port range for nodeport => 30000 - 32767

5.Why we use rolling update?

6.Difference between rolling update and recreate ?

7.What is size of the K8S cluster?
	we required 1 master node and 2 worker node.

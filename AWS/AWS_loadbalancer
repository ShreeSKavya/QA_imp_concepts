Q: what is Load-balancer in aws? why we use it?

A: Load balancer is a service which uniformly distributes network traffic and workloads across multiple servers or cluster of servers.Load balancer in AWS increases the availability and fault tolerance of an application.
    Load balancer coomonly uses round-robin technology.
    * Elastic Load Balancing automatically distributes your incoming traffic across multiple targets, such as EC2 instances, containers, and IP addresses, in one or more Availability Zones. 
    * It monitors the health of its registered targets, and routes traffic only to the healthy targets. 
    * Elastic Load Balancing scales your load balancer as your incoming traffic changes over time.
    * To make an AWS ELB accept incoming traffic you have to configure them by specifying one or more listeners. A listener is a process which will check for connection requests.

Q: what are the types of Load-balancer in aws? 

A: we have Three types of load balancers 
  a.Application Load balancer(ALB)
  b.Network Load balancer(NLB)
  c.Gateway Load balancer(GWLB)

Application Load balancer(ALB): 
    * An Application Load Balancer in AWS makes routing decisions at the application layer (HTTP/HTTPs) of the OSI model.
    * If you want to perform load balancing on Layer 7(application layer),or If you want to perform load balancing at HTTP layer,Then go for ALB
    * This layer is slightly costly and it has some additional capabilities.It is slightly slower also
    * ALB supports path-based and host-based routing,

 Network Load balancer(NLB): A Network Load Balancer makes routing decisions at the transport layer of the OSI model .It performs routing on (TCP/UDP) packets,not on HTTP packets.  
      * If you want to perform load balancing on Layer 4(transport layer),Then go for NLB
      * It can handle millions of requests per second
      * NLB is less costly and has low latency.High trasmission of data takes place in NLB.
      * It is used for Game servers,youtube,streaming platform.
      * NLB creates sticky sessions(All packets go for one single server)

 Gateway Load balancer(GWLB): It deals with VA(Virtual Apliances) like VPN kind of application,Firewall kind of application.
          * It offers High security compare to ALB and NLB
          * It sends highly encrypted packets to the VA.

************************************  EXTRA CONTENT *******************************************

The request goes to server from client side through 7 layers.and get the response from the server.
OSI (Open System Interconnection) model consists of 7 layers
1.Application Layer(Layer 7) : It is the one which is layer 7 in which what kind of protocol you used to access the server.

2.Presentation Layer(Layer 6): In this layer TLS (Transport Layer security) based requests send to the server.

3.Session Layer(Layer 5): This layer handles with session objects.

4.Transport Layer(Layer 4): This is key layer,In this layer request splits into multiple packets or small chunks.
      * This layer makes sure that the request comes from client to server in a secure way and in the form of small packets.

5.Network Layer(Layer 3): Small packets wants to travel from client to server through multiple routes.

6.Data link Layer(Layer 2): The main function of this layer is to make sure data transfer is error-free from one node to another, over the physical layer.
  * The packet received from the Network layer is further divided into frames depending on the frame size of the NIC(Network Interface Card).

7.Physical layer(Layer 1): This layer containes cables.In this layer all the cabels connected to the server.

************************************************************************************************************************

* TLS : Transport Layer Security (TLS) is a cryptographic protocol designed to provide communications security over a computer network.

* Transmission Control Protocol (TCP) : TCP is a transport-layer protocol. It provides a reliable virtual-circuit connection between applications.
             a.Data is sent without errors or duplication and is received in the same order as it is sent.
             b.TCP treats the data as a stream of bytes.

* User Datagram Protocol (UDP) : UDP is also a transport-layer protocol and is an alternative to TCP.
          a.It provides an unreliable datagram connection between applications. Data is transmitted link by link; there is no end-to-end connection.
          b.The service provides no guarantees. Data can be lost or duplicated, and datagrams can arrive out of order.

* Internet Protocol (IP) :
         In terms of the OSI model, IP is a network-layer protocol. It provides a datagram service between applications, supporting both TCP and UDP.

* protocol : A protocol is a set of rules and guidelines for communicating data. Rules are defined for each step and process during communication between two or more computers



***************************************************************************************************************************
**************************************************************************************************************************************
*****************************************************************************************************************************

Load Balancer:
        A load balancer serves as the single point of contact for clients. Clients send requests to the load balancer, and the load balancer sends them to targets, such as EC2 instances, in one or more Availability Zones.

        To configure your load balancer, you create target groups, and then register targets with your target groups. Your load balancer is most effective if you ensure that each enabled Availability Zone has at least one registered target. You also create listeners to check for connection requests from clients and route requests from clients to the targets in your target groups.

Target groups for your Network Load Balancers:
      Each target group is used to route requests to one or more registered targets. When you create a listener, you specify a target group for its default action. 
      Traffic is forwarded to the target group specified in the listener rule. You can create different target groups for different types of requests. For example, create one target group for general requests and other target groups for requests to the microservices for your application.

Listeners for your Network Load Balancers
      Before you start using your Network Load Balancer, you must add one or more listeners. A listener is a process that checks for connection requests, using the protocol and port that you configure. The rules that you define for a listener determine how the load balancer routes requests to the targets in one or more target groups.

What is a Network Load Balancer?
      Elastic Load Balancing automatically distributes your incoming traffic across multiple targets, such as EC2 instances, containers, and IP addresses, in one or more Availability Zones. It monitors the health of its registered targets, and routes traffic only to the healthy targets. Elastic Load Balancing scales your load balancer as your incoming traffic changes over time. It can automatically scale to the vast majority of workloads.

      Elastic Load Balancing supports the following load balancers:
          1. Application Load Balancers
          2. Network Load Balancers
          3. Gateway Load Balancers and 
          4. Classic Load Balancers. You can select the type of load balancer that best suits your needs. 

1. Application Load Balancers :
      An Application Load Balancer makes routing decisions at the application layer (HTTP/HTTPS) that is 7th layer of OSI model, supports path-based routing, and can route requests to one or more ports on each container instance in your cluster
      Application Load Balancer, aka ALB, is an Elastic Load Balancer or ELB on AWS. It operates at the application layer (the seventh layer) of the Open Systems Interconnection (OSI) model.
      ALBs have three components – listeners, load balancer, and the target group. After receiving a request, the load balancer evaluates the listener rules in priority order (to choose which rule to execute). It then selects a target from the target group for the rule action.

2. Network Load Balancers:
      The Network Load Balancer (NLB) operates at OSI Layer 4 (Transport layer, Connection level). Moreover, NLB supports application load balancing with TLS listeners, TCP, and UDP.
      Network Load Balancer is a term that is designed to manage unpredictable and inconsistent traffic patterns.
      NLB just forward requests whereas ALB examines the contents of the HTTP request header to determine where to route the request. So, an ALB support advanced request (content-based) routing.
      Several well-known AWS services including Auto Scaling, Amazon EC2 Container Service (ECS), Amazon CloudFormation, and AWS Certificate Manager have been linked to it (ACM).
      NLB was created especially for high-performance traffic that isn’t typical web traffic. While retaining extremely low latencies, NLB can handle millions of queries per second.


Sticky Sessions:
      Sticky sessions allow requests from the same client to be routed to the same target using cookies. We can set up sticky sessions easily by simply enabling sticky sessions and cookies in the ALB attributes. Application Load Balancer(ALB) supports both duration-based cookies and application-based cookies.


Key Differences: ALB vs NLB 
      - OSI Layer: Application Load Balancer (as the name implies) works at the Application Layer (Layer 7 of the OSI model, Request level). Network Load Balancer works at the Transport layer (Layer 4 of the OSI model, Connection level).
Routing: NLB just forward requests whereas ALB examines the contents of the HTTP request header to determine where to route the request. So, an ALB support advanced request (content-based) routing.
      - Static IP: ALB doesn’t provide support for static IP addresses whereas NLB provides support for zonal static IP addresses (in each AZ).
      - PrivateLink (Endpoint services): NLB provides support for PrivateLink with VPC Endpoints Service integration whereas ALB doesn’t support PrivateLink. Only NLB can be used directly as PrivateLink.

Elastic Load Balancing now supports forwarding traffic directly from NLB to ALB. With this feature, you can now use AWS PrivateLink and expose static IP addresses for applications built on ALB.

Use Cases
Choose ALB if:
      Application Load Balancer is best suited for load balancing of HTTP and HTTPS traffic and provides advanced request routing targeted at the delivery of modern application architectures, including microservices and containers.
Applications need advanced routing (host-based, URL-based, query string based).
Run multiple services (microservices) behind a single load balancer.

Choose NLB if:
      Network Load Balancer is best suited for load balancing of TCP traffic where extreme performance is required. It is capable of handling millions of requests per second while maintaining ultra-low latencies, and it is optimized to handle sudden and volatile traffic patterns.
      You want to share/expose your services (e.g. SaaS services) to other consumers in different VPCs using PrivateLink VPC Endpoint.
      You need a static IP address that can be used by applications as the front-end IP of the load balancer.

1. Stateless Protocol: 
        Stateless Protocols are the type of network protocols in which Client send request to the server and server response back according to current state. It does not require the server to retain session information or a status about each communicating partner for multiple request. 

        HTTP (Hypertext Transfer Protocol), UDP (User Datagram Protocol), DNS (Domain Name System) are the example of Stateless Protocol. 

Salient features of Stateless Protocols: 
        - Stateless Protocol simplify the design of Server.
        - The stateless protocol requires less resources because system do not need to keep track of the multiple link communications and the session details.
        - In Stateless Protocol each information packet travel on it’s own without reference to any other packet.
        -Each communication in Stateless Protocol is discrete and unrelated to those that precedes or follow.

2. Stateful Protocol: 
        In Stateful Protocol If client send a request to the server then it expects some kind of response, if it does not get any response then it resend the request. FTP (File Transfer Protocol), TCP, and Telnet are the example of Stateful Protocol. 

Salient features of Stateful Protocol: 
        - Stateful Protocols provide better performance to the client by keeping track of the connection information.
        - Stateful Application require Backing storage.
        - Stateful request are always dependent on the server-side state.
        - TCP session follow stateful protocol because both systems maintain information about the session itself during its life.

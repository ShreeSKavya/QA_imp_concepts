 what is Amazon Route 53:
    - AWS Route 53 lets developers and organizations route end users to their web applications in a very reliable and cost-effective             manner. 
    - It is a Domain Name System (DNS) that translates domain names into IP addresses to direct traffic to your website. 
    - In simple terms, it converts World Wide Web addresses like www.example.com to IP addresses like 10.20.30.40.

      Basically, domain queries are automatically routed to the nearest DNS server to provide the quickest response possible. If you use a web hosting company like GoDaddy, it takes 30 minutes to 24 hours to remap a domain to a different IP, but by using Route 53 in AWS it takes only a few minutes.

     - Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service. 
       You can use Route 53 to perform three main functions in any combination: domain registration, DNS routing, and health checking.

DNS or the Domain Name System:
    It translates human readable domain names (for example, www.amazon.com) to machine readable IP addresses (for example, 192.0.2.44).

1. Register domain names
     Your website needs a name, such as example.com. Route 53 lets you register a name for your website or web application, known as a domain name.

2. Route internet traffic to the resources for your domain
     When a user opens a web browser and enters your domain name (example.com) or subdomain name (acme.example.com) in the address bar, Route 53 internally uses the DNS resolver to convert domain name into IP address,there by it help us to connect the browser with our website or web application.

3. Check the health of your resources
     Route 53 sends automated requests over the internet to a resource, such as a web server, to verify that it's reachable, available, and functional. You also can choose to receive notifications when a resource becomes unavailable and choose to route internet traffic away from unhealthy resources.


*******************************************Extra content**************************************
How domain registration works:
    1. You choose a domain name and confirm that it's available, meaning that no one else has registered the domain name that you want.

      If the domain name you want is already in use, you can try other names or try changing only the top-level domain, such as .com, to another top-level domain, such as .ninja or .hockey. For a list of the top-level domains that Route 53 supports, see Domains that you can register with Amazon Route 53.

      You register the domain name with Route 53. When you register a domain, you provide names and contact information for the domain owner and other contacts.

      A public hosted zone is a container that holds information about how you want to route traffic on the internet for a specific domain, such as example.com, and its subdomains (acme.example.com, zenith.example.com). You get a public hosted zone in one of two ways:

      When you register a domain with Route 53, we create a hosted zone for you automatically.
        * Creates a hosted zone that has the same name as your domain
        * Assigns a set of four name servers to the hosted zone. When someone uses a browser to access your website, such as www.example.com, these name servers tell the browser where to find your resources, such as a web server
        * Gets the name servers from the hosted zone and adds them to the domain.

Nameserver: 
    This is a server on the internet specialized in handling queries regarding the location of a domain nameâ€™s various services. Nameservers are a fundamental part of the Domain Name System (DNS). They allow using domains instead of IP addresses.

Hosted Zone:
    Is a container for records, which include information about how to route traffic for a domain (such as example.com) and all of its subdomains (such as www.example.com, retail.example.com, and seattle.accounting.example.com).

    A public hosted zone describes how you want to route traffic for the domain in the public internet while a private hosted zone defines how you want to route traffic in a private AWS VPC.

    A private hosted zone only responds to queries coming from within the associated VPC and it is not used for hosting a website that need to be publicly accessed. The main use case of a private hosted zone is split-view DNS.

DNS Root Name Server:
   Root servers are DNS nameservers that operate in the root zone. These servers can directly answer queries for records stored or cached within the root zone, and they can also refer other requests to the appropriate Top Level Domain (TLD) server. 

TLD Name Server:
   A TLD nameserver maintains information for all the domain names that share a common domain extension, such as .com, . net.
    The TLD domain servers return the address of the Authoritative DNS servers to the Resolver.

   Route 53 name servers are the authoritative name servers for every domain that uses Route 53 as the DNS service

1. A user opens a web browser, enters www.example.com in the address bar, and presses Enter.

2. The request for www.example.com is routed to a DNS resolver, which is typically managed by the user's internet service provider (ISP), such as a cable internet provider, a DSL broadband provider, or a corporate network.

3. The DNS resolver for the ISP forwards the request for www.example.com to a DNS root name server.

4. The DNS resolver forwards the request for www.example.com again, this time to one of the TLD name servers for .com domains. The name server for .com domains responds to the request with the names of the four Route 53 name servers that are associated with the example.com domain.

The DNS resolver caches (stores) the four Route 53 name servers. The next time someone browses to example.com, the resolver skips steps 3 and 4 because it already has the name servers for example.com. The name servers are typically cached for two days.

5. The DNS resolver chooses a Route 53 name server and forwards the request for www.example.com to that name server.

6. The Route 53 name server looks in the example.com hosted zone for the www.example.com record, gets the associated value, such as the IP address for a web server, 192.0.2.44, and returns the IP address to the DNS resolver.

7. The DNS resolver finally has the IP address that the user needs. The resolver returns that value to the web browser.

Note
The DNS resolver also caches the IP address for example.com for an amount of time that you specify so that it can respond more quickly the next time someone browses to example.com. For more information, see time to live (TTL).

8. The web browser sends a request for www.example.com to the IP address that it got from the DNS resolver. This is where your content is, for example, a web server running on an Amazon EC2 instance or an Amazon S3 bucket that's configured as a website endpoint.

9. The web server or other resource at 192.0.2.44 returns the web page for www.example.com to the web browser, and the web browser displays the page.

A hosted zone:
      A hosted zone is a container for records, and records contain information about how you want to route traffic for a specific domain, such as example.com, and its subdomains (acme.example.com, zenith.example.com). A hosted zone and the corresponding domain have the same name. There are two types of hosted zones:

     Public hosted zones contain records that specify how you want to route traffic on the internet. For more information, see Working with public hosted zones.

     Private hosted zones contain records that specify how you want to route traffic in an Amazon VPC. For more information, see Working with private hosted zones.


********************************VPN************************************
VPN (Virtual Private Network)
    VPN creates a private, encrypted tunnel through which a user's device can access the internet by hiding their personal information, location, and other data.

VPC Endpoints: 
     Enables private connectivity to services hosted in AWS, from within your VPC without using an Internet Gateway, VPN, Network Address Translation (NAT) devices, or firewall proxies.

A VPC peering connection
     is a networking connection between two VPCs that enables you to route traffic between them using private IPv4 addresses or IPv6 addresses. Instances in either VPC can communicate with each other as if they are within the same network. You can create a VPC peering connection between your own VPCs, or with a VPC in another AWS account. The VPCs can be in different Regions (also known as an inter-Region VPC peering connection).



